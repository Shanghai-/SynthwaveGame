<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>y_positions[0] = 430;
y_positions[1] = 530;
y_positions[2] = 630;
buttons[0] = instance_find(btnMusicVol, 0);
buttons[1] = instance_find(btnSFXVol, 0);
buttons[2] = instance_find(btnBack, 0);
my_position = 0;

x = room_width / 2 - 200;

cooldown = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>cooldown = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var up_down = keyboard_check(vk_up);
var right_down = keyboard_check(vk_right);
var down_down = keyboard_check(vk_down);
var left_down = keyboard_check(vk_left);
var space_down = keyboard_check_pressed(vk_space);

if (!cooldown) {
    if (space_down) {
        if (my_position == 2) {
            room_goto(rmMainMenu);
        }
    }
    if (left_down &amp;&amp; !right_down) {
        if (my_position == 0) {
            if (global.music_volume &gt; 0) {
                global.music_volume -= 1;
            }
            audio_master_gain(global.music_volume / 100);
        } else if (my_position == 1) {
            if (global.sfx_volume &gt; 0) {
                global.sfx_volume -= 1;
            }
            audio_master_gain(global.music_volume / 100);
        }
    } else if (right_down &amp;&amp; !left_down) {
        if (my_position == 0) {
            if (global.music_volume &lt; 100) {
                global.music_volume += 1;
            }
            // We don't actually have any SFX, so the sfx vol slider
            // does nothing. 
            //audio_master_gain(global.sfx_volume / 100);
        } else if (my_position == 1) {
            if (global.sfx_volume &lt; 100) {
                global.sfx_volume += 1;
            }
            //audio_master_gain(global.sfx_volume / 100);
        }
     } else if (up_down &amp;&amp; !down_down) {
        with (buttons[my_position]) {
            myColor = make_color_rgb(91, 158, 165);
        }
        my_position -= 1;
        if (my_position == -1) {
            my_position = 2;
        }
        with (buttons[my_position]) {
            myColor = c_white;
        }
        cooldown = true;
        alarm[0] = 4;
    } else if (down_down &amp;&amp; !up_down) {
        with (buttons[my_position]) {
            myColor = make_color_rgb(91, 158, 165);
        }
        my_position += 1;
        if (my_position == 3) {
            my_position = 0;
        }
        with (buttons[my_position]) {
            myColor = c_white;
        }
        cooldown = true;
        alarm[0] = 4;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (my_position &lt; 2) {
    draw_sprite_ext(sprMenuTriangle, 0, room_width / 2 - 260, y_positions[my_position] + 31, -1, 1, 0, c_white, 1);
    draw_sprite(sprMenuTriangle, 0, room_width / 2 + 260, y_positions[my_position] + 31);
} else {
    draw_sprite(sprMenuTriangle, 0, room_width / 2 - 260, y_positions[my_position] + 31);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
