<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = global.btn_x + 200;
btn_idx = 0;

btn_types[0] = btnMusicVol;
btn_types[1] = btnSFXVol;
btn_types[2] = btnBack;

num_buttons = array_length_1d(btn_types);

for (var i = 0; i &lt; num_buttons; i++) {
    buttons[i] = instance_create(global.slider_x, 
        global.slider_y + (global.slider_offset * i), btn_types[i]);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var up_down = keyboard_check_pressed(vk_up);
var right_down = keyboard_check(vk_right);
var down_down = keyboard_check_pressed(vk_down);
var left_down = keyboard_check(vk_left);
var select_down = keyboard_check_pressed(vk_space) || keyboard_check_pressed(vk_enter);

if (select_down) {
    if (btn_idx == 2) {
        room_goto(rmMainMenu);
        exit;
    }
}
if (left_down &amp;&amp; !right_down) {
    if (btn_idx == 0) {
        if (global.music_volume &gt; 0) {
            global.music_volume -= 1;
        }
        audio_master_gain(global.music_volume / 100);
    } else if (btn_idx == 1) {
        if (global.sfx_volume &gt; 0) {
            global.sfx_volume -= 1;
        }
        // We don't actually have any SFX, so the sfx vol slider
        // does nothing. 
    }
} else if (right_down &amp;&amp; !left_down) {
    if (btn_idx == 0) {
        if (global.music_volume &lt; 100) {
            global.music_volume += 1;
        }
        audio_master_gain(global.music_volume / 100);
        
    } else if (btn_idx == 1) {
        if (global.sfx_volume &lt; 100) {
            global.sfx_volume += 1;
        }
        // We don't actually have any SFX, so the sfx vol slider
        // does nothing. 
        //audio_master_gain(global.sfx_volume / 100);
    }
 } else if (up_down &amp;&amp; !down_down) {
    with (buttons[btn_idx]) {
        myColor = make_color_rgb(91, 158, 165);
    }
    btn_idx -= 1;
    if (btn_idx == -1) {
        btn_idx = num_buttons - 1;
    }

    with (buttons[btn_idx]) {
        myColor = c_white;
    }
} else if (down_down &amp;&amp; !up_down) {
    with (buttons[btn_idx]) {
        myColor = make_color_rgb(91, 158, 165);
    }
    btn_idx += 1;
    if (btn_idx == num_buttons) {
        btn_idx = 0;
    }

    with (buttons[btn_idx]) {
        myColor = c_white;
    }
}

y = global.slider_y + (btn_idx * global.slider_offset) + 32;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (btn_idx &lt; 2) {
    draw_sprite_ext(sprMenuTriangle, 0, global.slider_x - 260, y, -1, 1, 0, c_white, 1);
    draw_sprite(sprMenuTriangle, 0, global.slider_x + 260, y);
} else {
    draw_sprite(sprMenuTriangle, 0, global.slider_x - 260, y);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
